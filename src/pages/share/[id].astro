---
import HtmlLayout from '@/layouts/HtmlLayout.astro';
import MainLayout from '@/layouts/MainLayout.vue';
import ResultWrapper from '@/components/result/ResultWrapper.vue';
import ContentsInnerLayout from '@/layouts/ContentsInnerLayout.vue';
import { createClient } from '@supabase/supabase-js';
import { characters } from '@/data/characters.js';
import FootSection from '@/components/section/FootSection.vue';

export const prerender = false;

const supabase = createClient(
	import.meta.env.PUBLIC_SUPABASE_URL,
	import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

const { id } = Astro.params;

let originalUrl = '';
let username = '';
let characterInfo = null;
let shortUrl = '';

if (id) {
	try {
		const { data: urlData, error } = await supabase
			.from('shortened_urls')
			.select('original_url')
			.eq('id', id)
			.single();

		if (urlData && !error) {
			originalUrl = urlData.original_url;
			username = id;

			const currentUrl = new URL(Astro.url);
			shortUrl = currentUrl.href;

			try {
				const url = new URL(originalUrl);
				const hash = url.hash.substring(1);
				const resultParam = url.searchParams.get('result');

				if (hash) {
					try {
						const decoded = atob(hash);
						const utf8String = decodeURIComponent(escape(decoded));
						characterInfo = JSON.parse(utf8String);
					} catch {}
				}

				if (!characterInfo && resultParam) {
					try {
						const base64 = resultParam.replace(/-/g, '+').replace(/_/g, '/');
						const paddedBase64 = base64 + '='.repeat((4 - (base64.length % 4)) % 4);
						const decoded = atob(paddedBase64);
						const utf8String = decodeURIComponent(escape(decoded));
						characterInfo = JSON.parse(utf8String);
					} catch {
						try {
							characterInfo = JSON.parse(decodeURIComponent(resultParam));
						} catch {}
					}
				}
			} catch {}
		}
	} catch {}
}

let title = '카트라이더 캐릭터로 알아보는 나의 성격';
let description = '나는 어떤 캐릭터의 성격일까?';
let image = '/images/og/og.png';

console.log('공유 결과 페이지 - characterInfo:', characterInfo);
console.log('공유 결과 페이지 - originalUrl:', originalUrl);

if (characterInfo && characterInfo.title) {
	const character = characters[characterInfo.title];
	if (character) {
		title = `${username}님은 ${characterInfo.title}와 가장 비슷한 성격을 가지고있어요.`;
		description = `${username}님은 ${characterInfo.title}와 가장 비슷합니다. ${character.metaDescription}`;
		image = character.popupImage;
	}
}
---

<HtmlLayout bodyClassName="bg-sky-50" title={title} description={description} image={image}>
	<MainLayout client:load type="result">
		<ContentsInnerLayout client:load type="result">
			<ResultWrapper client:load ssrUserName={username} characterInfo={characterInfo} />
		</ContentsInnerLayout>
	</MainLayout>
	<FootSection client:idle />
</HtmlLayout>
